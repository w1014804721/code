<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.wangjingxin.dao.AnswerDao">
    <insert id="insert" keyProperty="id">
        insert into answer (userId, number, content)
            value (#{userId}, #{number}, #{content})
    </insert>
    <insert id="day">
        insert into integral (id, date, integral) value (#{userId}, CURDATE(), #{mark})
        on duplicate key update integral = integral + #{mark}
    </insert>
    <insert id="insertQuestion">
        insert into question (id, title, slug, content, difficulty, tags)
            value (#{id}, #{title}, #{slug}, #{content}, #{difficulty}, #{tags})
        on duplicate key update id = VALUES(id)
    </insert>
    <select id="get" resultType="top.wangjingxin.model.vo.AnswerVO">
        select
            A.id,
            A.userId,
            u.nickName,
            A.number,
            A.date,
            A.mark,
            q.title,
            q.slug,
            q.difficulty,
            q.tags
        from (select
                  id,
                  userId,
                  `number`,
                  date,
                  mark
              from answer
              where id &lt; #{offsets}
              order by id desc
              limit #{rows}) A
            left join question q on q.id = A.number
            left join user u on u.id = A.userId
    </select>
    <select id="getByTitle" resultType="top.wangjingxin.model.vo.AnswerVO">
        select
            A.id,
            A.userId,
            u.nickName,
            A.number,
            A.date,
            A.mark,
            q.title,
            q.slug,
            q.difficulty,
            q.tags
        from (select
                  id,
                  userId,
                  `number`,
                  date,
                  mark
              from answer
              where id &lt; #{p.offsets}
              order by id desc) A
            join question q on q.id = A.number AND q.title = #{t}
            join user u on u.id = A.userId
        limit #{p.rows}
    </select>
    <select id="getByUser" resultType="top.wangjingxin.model.vo.AnswerVO">
        select
            A.id,
            A.userId,
            u.nickName,
            A.number,
            A.date,
            A.mark,
            q.title,
            q.slug,
            q.difficulty,
            q.tags
        from (select
                  id,
                  userId,
                  `number`,
                  date,
                  mark
              from answer
              where id &lt; #{p.offsets} AND userId = #{id}
              order by id desc
              limit #{p.rows}) A
            left join question q on q.id = A.number
            left join user u on u.id = A.userId
    </select>
    <select id="getCount" resultType="java.lang.Integer">
        select count(1)
        from answer
    </select>
    <select id="getByTitleCount" resultType="java.lang.Integer">
        select count(1)
        from answer a
            join question q on a.number = q.id AND q.title = #{title}
    </select>
    <select id="getByUserCount" resultType="java.lang.Integer">
        select count(1)
        from answer
        where userId = #{id}
    </select>
    <select id="queryCount" resultType="java.lang.Integer">
        select count(1)
        from answer
        where userId = #{userId} AND number = #{number}
    </select>
    <select id="getMark" resultType="java.lang.Integer">
        select difficulty
        from question
        where id = #{id}
    </select>
    <select id="query" resultType="top.wangjingxin.model.vo.QuestionVO">
        select
            id,
            title,
            content,
            difficulty,
            tags
        from question
        where slug = #{slug}
    </select>
</mapper>